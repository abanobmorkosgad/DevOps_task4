apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-claim
  namespace: jenkins
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      # initContainers:
      # - name: init-permissions
      #   image: busybox
      #   command: ['sh', '-c', 'chown -R 1000:1000 /var/jenkins_home']
      #   volumeMounts:
      #   - mountPath: /var/jenkins_home
      #     name: jenkins-data
      # - name: add-jenkins-to-docker
      #   image: busybox
      #   command: ['sh', '-c', 'chmod 666 /var/run/docker.sock']
        # securityContext:
        #   runAsUser: 0
        # volumeMounts:
        # - mountPath: /var/run/docker.sock
        #   name: docker-socket
      securityContext:
            fsGroup: 1000
            runAsUser: 1000
      serviceAccountName: jenkins-admin
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts
        ports:
        - containerPort: 8080
        - containerPort: 50000
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-data
        # - mountPath: /var/run/docker.sock
        #   name: docker-socket
        # - mountPath: /usr/bin/docker
        #   name: docker-bin
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-claim
      # - name: docker-socket
      #   hostPath:
      #     path: /var/run/docker.sock
      # - name: docker-bin
      #   hostPath:
      #     path: /usr/bin/docker
